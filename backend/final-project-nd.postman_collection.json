{
	"info": {
		"_postman_id": "d6a9e18a-35a9-4dd9-998c-86e31dae8e24",
		"name": "final-project-nd",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27180100"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "home",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/the-food-detail"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/food-items-detail"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test3\",\r\n    \"rate_it\": \"1\"\r\n}\r\n"
						},
						"url": "{{host}}/the-food"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"test1\"\r\n}"
						},
						"url": "{{host}}/food-items"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test33\",\r\n    \"rate_it\": \"2\"\r\n}\r\n"
						},
						"url": "{{host}}/the-food/1"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "{{host}}/food-items/1"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/the-food/1"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/food-items/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains the food array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.the_food).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/the-food-detail"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains food items array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.food_items).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/food-items-detail"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test3\",\r\n    \"rate_it\": \"1\"\r\n}\r\n"
						},
						"url": "{{host}}/the-food"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"test1\"\r\n}"
						},
						"url": "{{host}}/food-items"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test33\",\r\n    \"rate_it\": \"2\"\r\n}\r\n"
						},
						"url": "{{host}}/the-food/1"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"test100\"\r\n}"
						},
						"url": "{{host}}/food-items/1"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/the-food/1"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/food-items/1"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlVaNUVKVHlkbDZQNnBOOEVYZ3FmWiJ9.eyJpc3MiOiJodHRwczovL21vYXoudWsuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0ZWJhMDUwOTcyMGRjZDIwYTIyNTc1NSIsImF1ZCI6InJlc3RhdXJhbnQiLCJpYXQiOjE2OTMxNzU2MjIsImV4cCI6MTY5MzI2MjAyMiwiYXpwIjoiRHJpYlMya1ZpYmY5U0ZrY1RGTm1Pb1RXUVROQTFXd0QiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImdldDpkYXRhIl19.jZWxpHtDoJIr9A73sVBvl1raziehtGN7bwpXULipyM50JQjJgDlu9Et8o7Cem5kgjsCPGCzlny5LKwzFWRTzTEV6vFlOFau1E0Y4v6wzSGKICka9YJqPlCGdOpCcCuFXGDCGgHkpidELVDJkED3460J2Mo--7yb7AVYejlyMi10glsxI8CKWiC_2jXoks-gTHZvMVxYKn2ztrMLuB5AKqzhr_jDiNPCZGFp0vgyJMltU0KZiKAIQ9YVHoSfgkPK8bZRzLvMnCZhCboG3p5Q51L6L3mhAhHzP5a9azkd3YW2DcM2iur6wPeyPUImSVoy-7QTf1CZV2zGkx6XW2TZRug"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test3\",\r\n    \"rate_it\": \"2\"\r\n}\r\n"
						},
						"url": "{{host}}/the-food"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"test1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/food-items"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains food items array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.food_items).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"test100\"\r\n}"
						},
						"url": "{{host}}/food-items/1"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains the food array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.the_food).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test33\",\r\n    \"rate_it\": \"2\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/the-food/1"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/the-food/1"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/food-items/1"
					},
					"response": []
				},
				{
					"name": "food_items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains food items array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.food_items).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/food-items-detail"
					},
					"response": []
				},
				{
					"name": "the-food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains the food array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.the_food).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/the-food-detail"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlVaNUVKVHlkbDZQNnBOOEVYZ3FmWiJ9.eyJpc3MiOiJodHRwczovL21vYXoudWsuYXV0aDAuY29tLyIsInN1YiI6Imdvb2dsZS1vYXV0aDJ8MTAzMTI1MDcxMTE3NTIxMTY5NDM1IiwiYXVkIjoicmVzdGF1cmFudCIsImlhdCI6MTY5MzE3NTQ4NCwiZXhwIjoxNjkzMjYxODg0LCJhenAiOiJEcmliUzJrVmliZjlTRmtjVEZObU9vVFdRVE5BMVd3RCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRhdGEiLCJnZXQ6ZGF0YSIsInBhdGNoOmRhdGEiLCJwb3N0OmRhdGEiXX0.GkPJxYWTMGzQTRZDwV1JYisZU9x1Z8Muep9Ew2KwRuC-wn3_2I7JMjiYpyLDJUL2ktMlhejkvL3UvpyuUkYqC5a9AVdx8POXztqS3vs8DUwHegRAjWywyNEcsQwoeyaSK-PYQUVRYlruCTcLpjcCN8Bpb_qHaDJadHF9XeIllI2pfxEvIyEWTI-1U7lWPP35gJ87BE6yXkbEZJmnq5HT-NNCqvfEFzMj95_zRSf5nP-pNec8T4j50iCXuIlzjsaZZHct7aefQzdSLpB2Z0nt9YVTMiqujSk8uQ1wVilWyDLp7NEOpGa83VrWPyuxW2bJ8kyVS95LkSAzkclP3JdCag"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}